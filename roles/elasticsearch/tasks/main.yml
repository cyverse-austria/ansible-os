---
- name: Install tzdata
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Set kernel map-ccount
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: true
    state: present
    reload: true

- name: Create compose-driver
  ansible.builtin.file:
    path: /home/docker/os_compose
    state: directory
    owner: docker
    group: docker
    mode: "0755"

- name: Create docker-compose-file
  ansible.builtin.template:
    # src: os_compose.yml.j2
    src: os_compose.yml.j2
    dest: /home/docker/os_compose/os_compose.yml
    owner: docker
    group: docker
    mode: "0664"

- name: Create and start services
  community.docker.docker_compose:
    project_src: /home/docker/os_compose
    files: os_compose.yml
  register: _elasticsearch__output
  become: true
  become_user: docker

### Fix this @FRANZ
# - name: Verify that nodes are running
#   ansible.builtin.assert:
#     that:
#       - "_elasticsearch__output.services.opensearch-node1.os_compose_opensearch-node1_1.state.running"
#       - "_elasticsearch__output.services.opensearch-node2.os_compose_opensearch-node2_1.state.running"

# TODO: bring back
# # - name: Delete the index
#   ansible.builtin.uri:
#     url: http://localhost:9200/*
#     method: DELETE
#   register: _elasticsearch__indexdelete
#   retries: 5
#   delay: 5
#   until: _elasticsearch__indexdelete.msg is search("OK")

## TODO: double check this URL
# - name: CREATE the index
#   ansible.builtin.uri:
#     url: http://localhost:9200/data
#     method: PUT
#     body_format: json
#     src: settings.json
#   register: _elasticsearch__indexcreate

# - name: Verify index is created
#   ansible.builtin.assert:
#     that:
#       - _elasticsearch__indexcreate.json.shards_acknowledged
#
# - name: Change number of replicas  for **all** indices to {{ elasticsearch__number_of_replicas }}
#   ansible.builtin.uri:
#     url: http://localhost:9200/*/_settings
#     method: PUT
#     body_format: json
#     body: >-
#       {
#         "index": {
#           "number_of_replicas": "{{ elasticsearch__number_of_replicas }}"
#         }
#       }
#   when:
#     - elasticsearch__number_of_replicas == "0"
#   tags:
#     - "set replaicas to 0"
